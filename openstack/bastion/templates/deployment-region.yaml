{{ if .Values.region_deployment }}
kind: Deployment
apiVersion: apps/v1

metadata:
  name: bastion-region
spec:
  revisionHistoryLimit: 5
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: bastion-region
  template:
    metadata:
      labels:
        name: bastion-region
      annotations:
        checksum/configmap: {{ include "bastion/templates/etc-configmap.yaml" . | sha256sum }}
        checksum/secret: {{ include "bastion/templates/secret.yaml" . | sha256sum }}
    spec:
      volumes:
        - name: bastion-etc
          configMap:
            name: bastion-etc
      containers:
        - name: region
          image: {{required ".Values.global.registry is missing" .Values.global.registry }}/{{required "Values.image is missing" .Values.image}}:{{required "Values.image_tag is missing" .Values.image_tag}}
          imagePullPolicy: Always
          args: [ bastion, "--config-file", "/etc/config/bastion.conf","--config-file", "/etc/config/logging.conf"]
          env: {{ include "bastion_environment" $ | indent 12 }}
          volumeMounts:
            - mountPath: /etc/config
              name: bastion-etc
#          livenessProbe:
#            httpGet:
#              path: /
#              port: 8080
#            timeoutSeconds: 10
#            periodSeconds: 60
#            initialDelaySeconds: 60
#          readinessProbe:
#            httpGet:
#              path: /
#              port: 8080
#            timeoutSeconds: 5
#            periodSeconds: 5
          resources:
            requests:
              cpu: "150m"
              memory: "1024Mi"
            limits:
              cpu: "150m"
              memory: "1024Mi"
 {{ end }}